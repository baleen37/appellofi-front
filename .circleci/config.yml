version: 2
jobs:
  build:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker

      - restore_cache:
          keys:
            - v1-{{ .Branch }}
            - v1-
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0
      - save_cache:
          key: v1-{{ .Branch }}
          paths:
            - ~/.cache/pip

      - restore_cache:
          keys:
           - docker-{{ checksum "Dockerfile" }}-{{ checksum "package.json" }}
           - docker-{{ checksum "Dockerfile" }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: docker-{{ checksum "Dockerfile" }}-{{ checksum "package.json" }}
          paths:
            - /caches/app.tar

      - run:
          name: Run tests
          command: |
            docker-compose -f ./docker-compose.test.yml up
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              CLUSTER='default'
              FAMILY='appellofi-front'
              TASK='appellofi-front'
              SERVICE='app-service'

              # Login to AWS
              aws configure set region $AWS_REGION
              $(aws ecr get-login)

              # Tag and push docker image
              docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASS";
              docker tag app "baleen37/appellofi-front:${CIRCLE_SHA1}"
              docker push "baleen37/appellofi-front:${CIRCLE_SHA1}"

              # Create task for docker deploy
              task_template='[
                {
                  "name": "%s",
                  "image": "%s.dkr.ecr.%s.amazonaws.com/%s:%s",
                  "essential": true,
                  "memoryReservation": 1000,
                  "portMappings": [
                    {
                      "containerPort": 3000,
                      "hostPort": 80
                    }
                  ],
                  "environment" : [
                      { "name" : "NODE_ENV", "value" : "production" }
                  ]
                }
              ]'
              echo "$task_template"
              task_def=$(printf "$task_template" $TASK $AWS_ACCOUNT_ID $AWS_REGION $TASK $CIRCLE_SHA1)

              # Register task definition
              json=$(aws ecs register-task-definition --container-definitions "$task_def" --family "$FAMILY")

              # Grab revision # using regular bash and grep
              revision=$(echo "$json" | grep -o '"revision": [0-9]*' | grep -Eo '[0-9]+')

              # Deploy revision
              aws ecs update-service --cluster "$CLUSTER" --service "$SERVICE" --task-definition "$TASK":"$revision"

              return 0
            fi
